{"mappings":"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","sources":["<anon>","src/scripts/main.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $197cd56b15c33885$var$GRID_SIZE = 4;\nvar $197cd56b15c33885$var$Tile = /*#__PURE__*/ function() {\n    function Tile(gridElement) {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Tile);\n        this.tileElement = document.createElement(\"div\");\n        this.tileElement.classList.add(\"tile\");\n        this.setValue(Math.random() > 0.1 ? 2 : 4);\n        gridElement.append(this.tileElement);\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Tile, [\n        {\n            key: \"setXY\",\n            value: function setXY(x, y) {\n                this.x = x;\n                this.y = y;\n                this.tileElement.style.setProperty(\"--x\", x);\n                this.tileElement.style.setProperty(\"--y\", y);\n            }\n        },\n        {\n            key: \"setValue\",\n            value: function setValue(value) {\n                this.value = value;\n                this.tileElement.textContent = value;\n                this.tileElement.classList.add(\"tile--\".concat(value));\n            }\n        },\n        {\n            key: \"getValue\",\n            value: function getValue() {\n                return this.value;\n            }\n        },\n        {\n            key: \"removeFromField\",\n            value: function removeFromField() {\n                this.tileElement.remove();\n            }\n        }\n    ]);\n    return Tile;\n}();\nvar $197cd56b15c33885$var$Cell = /*#__PURE__*/ function() {\n    function Cell(gridElement, x, y) {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Cell);\n        var cell = document.createElement(\"div\");\n        cell.classList.add(\"field-cell\");\n        gridElement.append(cell);\n        this.x = x;\n        this.y = y;\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Cell, [\n        {\n            key: \"linkTile\",\n            value: function linkTile(tile) {\n                tile.setXY(this.x, this.y);\n                this.linkedTile = tile;\n            }\n        },\n        {\n            key: \"unlinkTile\",\n            value: function unlinkTile() {\n                this.linkedTile = null;\n            }\n        },\n        {\n            key: \"isEmpty\",\n            value: function isEmpty() {\n                return !this.linkedTile;\n            }\n        },\n        {\n            key: \"linkTileForMerge\",\n            value: function linkTileForMerge(tile) {\n                tile.setXY(this.x, this.y);\n                this.linkedTileForMerge = tile;\n            }\n        },\n        {\n            key: \"unlinkTileForMerge\",\n            value: function unlinkTileForMerge() {\n                this.linkedTileForMerge = null;\n            }\n        },\n        {\n            key: \"hasTileForMerge\",\n            value: function hasTileForMerge() {\n                return !!this.linkedTileForMerge;\n            }\n        },\n        {\n            key: \"canAccept\",\n            value: function canAccept(newTile) {\n                return this.isEmpty() || !this.hasTileForMerge() && this.linkedTile.value === newTile.value;\n            }\n        },\n        {\n            key: \"mergeTiles\",\n            value: function mergeTiles() {\n                this.linkedTile.setValue(this.linkedTile.value + this.linkedTileForMerge.value);\n                this.linkedTileForMerge.removeFromField();\n                this.unlinkTileForMerge();\n            }\n        },\n        {\n            key: \"getValue\",\n            value: function getValue() {\n                return this.linkedTile.getValue();\n            }\n        }\n    ]);\n    return Cell;\n}();\nvar $197cd56b15c33885$var$Grid = /*#__PURE__*/ function() {\n    function Grid(gridElement) {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Grid);\n        this.cells = [];\n        for(var i = 0; i < $197cd56b15c33885$var$GRID_SIZE * $197cd56b15c33885$var$GRID_SIZE; i++)this.cells.push(new $197cd56b15c33885$var$Cell(gridElement, i % $197cd56b15c33885$var$GRID_SIZE, Math.floor(i / $197cd56b15c33885$var$GRID_SIZE)));\n        this.cellsGrouppedByColumns = this.groupCellsByColumn();\n        this.cellsGrouppedByReversedColumns = this.groupCellsByColumn().map(function(column) {\n            return (0, $227c6742e0ff6f82$export$71511d61b312f219)(column).reverse();\n        });\n        this.cellsGrouppedByRows = this.groupCellsByRow();\n        this.cellsGrouppedByReversedRows = this.groupCellsByRow().map(function(row) {\n            return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row).reverse();\n        });\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Grid, [\n        {\n            key: \"getRandomEmptyCell\",\n            value: function getRandomEmptyCell() {\n                var emptyCells = this.cells.filter(function(cell) {\n                    return cell.isEmpty();\n                });\n                var randomIndex = Math.floor(Math.random() * emptyCells.length);\n                return emptyCells[randomIndex];\n            }\n        },\n        {\n            key: \"groupCellsByColumn\",\n            value: function groupCellsByColumn() {\n                return this.cells.reduce(function(groupedCells, cell) {\n                    groupedCells[cell.x] = groupedCells[cell.x] || [];\n                    groupedCells[cell.x][cell.y] = cell;\n                    return groupedCells;\n                }, []);\n            }\n        },\n        {\n            key: \"groupCellsByRow\",\n            value: function groupCellsByRow() {\n                return this.cells.reduce(function(groupedCells, cell) {\n                    groupedCells[cell.y] = groupedCells[cell.y] || [];\n                    groupedCells[cell.y][cell.x] = cell;\n                    return groupedCells;\n                }, []);\n            }\n        }\n    ]);\n    return Grid;\n}();\nvar $197cd56b15c33885$var$gameBoard = document.getElementById(\"game-field\");\nvar $197cd56b15c33885$var$grid = new $197cd56b15c33885$var$Grid($197cd56b15c33885$var$gameBoard);\nvar $197cd56b15c33885$var$startButton = document.getElementById(\"button-start\");\n$197cd56b15c33885$var$startButton.addEventListener(\"click\", $197cd56b15c33885$var$startGame);\nvar $197cd56b15c33885$var$score = 0;\nvar $197cd56b15c33885$var$scoreElement = document.getElementById(\"score\");\nfunction $197cd56b15c33885$var$startGame() {\n    $197cd56b15c33885$var$setupNewGame();\n    document.getElementById(\"message-start\").classList.add(\"hidden\");\n    $197cd56b15c33885$var$startButton.classList.remove(\"start\");\n    $197cd56b15c33885$var$startButton.innerHTML = \"Restart\";\n    $197cd56b15c33885$var$startButton.classList.add(\"restart\");\n    $197cd56b15c33885$var$startButton.removeEventListener(\"click\", $197cd56b15c33885$var$startGame);\n    $197cd56b15c33885$var$startButton.addEventListener(\"click\", $197cd56b15c33885$var$setupNewGame);\n}\nfunction $197cd56b15c33885$var$setupNewGame() {\n    $197cd56b15c33885$var$grid.cells.forEach(function(cell) {\n        if (!cell.isEmpty()) {\n            cell.linkedTile.removeFromField();\n            cell.unlinkTile();\n        }\n    });\n    $197cd56b15c33885$var$grid.getRandomEmptyCell().linkTile(new $197cd56b15c33885$var$Tile($197cd56b15c33885$var$gameBoard));\n    $197cd56b15c33885$var$grid.getRandomEmptyCell().linkTile(new $197cd56b15c33885$var$Tile($197cd56b15c33885$var$gameBoard));\n    $197cd56b15c33885$var$setupInputOnce();\n    $197cd56b15c33885$var$score = 0;\n    $197cd56b15c33885$var$scoreElement.innerHTML = $197cd56b15c33885$var$score;\n    document.getElementById(\"message-lose\").classList.add(\"hidden\");\n    document.getElementById(\"message-win\").classList.add(\"hidden\");\n}\nfunction $197cd56b15c33885$var$setupInputOnce() {\n    window.addEventListener(\"keydown\", $197cd56b15c33885$var$handleInput, {\n        once: true\n    });\n}\nfunction $197cd56b15c33885$var$handleInput(e) {\n    switch(e.key){\n        case \"ArrowUp\":\n            if (!$197cd56b15c33885$var$canMoveUp()) {\n                $197cd56b15c33885$var$setupInputOnce();\n                return;\n            }\n            $197cd56b15c33885$var$moveUp();\n            break;\n        case \"ArrowDown\":\n            if (!$197cd56b15c33885$var$canMoveDown()) {\n                $197cd56b15c33885$var$setupInputOnce();\n                return;\n            }\n            $197cd56b15c33885$var$moveDown();\n            break;\n        case \"ArrowLeft\":\n            if (!$197cd56b15c33885$var$canMoveLeft()) {\n                $197cd56b15c33885$var$setupInputOnce();\n                return;\n            }\n            $197cd56b15c33885$var$moveLeft();\n            break;\n        case \"ArrowRight\":\n            if (!$197cd56b15c33885$var$canMoveRight()) {\n                $197cd56b15c33885$var$setupInputOnce();\n                return;\n            }\n            $197cd56b15c33885$var$moveRight();\n            break;\n        default:\n            $197cd56b15c33885$var$setupInputOnce();\n            return;\n    }\n    var newTile = new $197cd56b15c33885$var$Tile($197cd56b15c33885$var$gameBoard);\n    $197cd56b15c33885$var$grid.getRandomEmptyCell().linkTile(newTile);\n    if (!$197cd56b15c33885$var$canMoveUp() && !$197cd56b15c33885$var$canMoveDown() && !$197cd56b15c33885$var$canMoveLeft() && !$197cd56b15c33885$var$canMoveRight()) {\n        document.getElementById(\"message-lose\").classList.remove(\"hidden\");\n        return;\n    }\n    $197cd56b15c33885$var$setupInputOnce();\n}\nfunction $197cd56b15c33885$var$moveUp() {\n    $197cd56b15c33885$var$slideTiles($197cd56b15c33885$var$grid.cellsGrouppedByColumns);\n}\nfunction $197cd56b15c33885$var$moveDown() {\n    $197cd56b15c33885$var$slideTiles($197cd56b15c33885$var$grid.cellsGrouppedByReversedColumns);\n}\nfunction $197cd56b15c33885$var$moveLeft() {\n    $197cd56b15c33885$var$slideTiles($197cd56b15c33885$var$grid.cellsGrouppedByRows);\n}\nfunction $197cd56b15c33885$var$moveRight() {\n    $197cd56b15c33885$var$slideTiles($197cd56b15c33885$var$grid.cellsGrouppedByReversedRows);\n}\nfunction $197cd56b15c33885$var$slideTiles(groupedCells) {\n    groupedCells.forEach(function(group) {\n        return $197cd56b15c33885$var$slideTilesInGroup(group);\n    });\n    $197cd56b15c33885$var$grid.cells.forEach(function(cell) {\n        if (cell.hasTileForMerge()) {\n            cell.mergeTiles();\n            $197cd56b15c33885$var$score += cell.getValue();\n            $197cd56b15c33885$var$scoreElement.innerHTML = $197cd56b15c33885$var$score;\n            if (cell.getValue() === 2048) {\n                document.getElementById(\"message-win\").classList.remove(\"hidden\");\n                window.removeEventListener(\"keydown\");\n            }\n        }\n    });\n}\nfunction $197cd56b15c33885$var$slideTilesInGroup(group) {\n    for(var i = 1; i < group.length; i++){\n        if (group[i].isEmpty()) continue;\n        var cellWithTile = group[i];\n        var targetCell = void 0;\n        var j = i - 1;\n        while(j >= 0 && group[j].canAccept(cellWithTile.linkedTile)){\n            targetCell = group[j];\n            j--;\n        }\n        if (!targetCell) continue;\n        if (targetCell.isEmpty()) targetCell.linkTile(cellWithTile.linkedTile);\n        else targetCell.linkTileForMerge(cellWithTile.linkedTile);\n        cellWithTile.unlinkTile();\n    }\n}\nfunction $197cd56b15c33885$var$canMoveUp() {\n    return $197cd56b15c33885$var$canMove($197cd56b15c33885$var$grid.cellsGrouppedByColumns);\n}\nfunction $197cd56b15c33885$var$canMoveDown() {\n    return $197cd56b15c33885$var$canMove($197cd56b15c33885$var$grid.cellsGrouppedByReversedColumns);\n}\nfunction $197cd56b15c33885$var$canMoveLeft() {\n    return $197cd56b15c33885$var$canMove($197cd56b15c33885$var$grid.cellsGrouppedByRows);\n}\nfunction $197cd56b15c33885$var$canMoveRight() {\n    return $197cd56b15c33885$var$canMove($197cd56b15c33885$var$grid.cellsGrouppedByReversedRows);\n}\nfunction $197cd56b15c33885$var$canMove(groupCells) {\n    return groupCells.some(function(group) {\n        return $197cd56b15c33885$var$canMoveInGroup(group);\n    });\n}\nfunction $197cd56b15c33885$var$canMoveInGroup(group) {\n    return group.some(function(cell, index) {\n        if (index === 0) return false;\n        if (cell.isEmpty()) return false;\n        var targetCell = group[index - 1];\n        return targetCell.canAccept(cell.linkedTile);\n    });\n}\n\n})();\n//# sourceMappingURL=index.fdf5c2c1.js.map\n","'use strict';\n\nconst GRID_SIZE = 4;\n\nclass Tile {\n  constructor(gridElement) {\n    this.tileElement = document.createElement('div');\n    this.tileElement.classList.add('tile');\n    this.setValue(Math.random() > 0.1 ? 2 : 4);\n    gridElement.append(this.tileElement);\n  }\n\n  setXY(x, y) {\n    this.x = x;\n    this.y = y;\n    this.tileElement.style.setProperty('--x', x);\n    this.tileElement.style.setProperty('--y', y);\n  }\n\n  setValue(value) {\n    this.value = value;\n    this.tileElement.textContent = value;\n\n    this.tileElement.classList.add(`tile--${value}`);\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  removeFromField() {\n    this.tileElement.remove();\n  }\n}\n\nclass Cell {\n  constructor(gridElement, x, y) {\n    const cell = document.createElement('div');\n\n    cell.classList.add('field-cell');\n    gridElement.append(cell);\n    this.x = x;\n    this.y = y;\n  }\n\n  linkTile(tile) {\n    tile.setXY(this.x, this.y);\n    this.linkedTile = tile;\n  }\n\n  unlinkTile() {\n    this.linkedTile = null;\n  }\n\n  isEmpty() {\n    return !this.linkedTile;\n  }\n\n  linkTileForMerge(tile) {\n    tile.setXY(this.x, this.y);\n    this.linkedTileForMerge = tile;\n  }\n\n  unlinkTileForMerge() {\n    this.linkedTileForMerge = null;\n  }\n\n  hasTileForMerge() {\n    return !!this.linkedTileForMerge;\n  }\n\n  canAccept(newTile) {\n    return (\n      this.isEmpty()\n      || (!this.hasTileForMerge() && this.linkedTile.value === newTile.value)\n    );\n  }\n\n  mergeTiles() {\n    this.linkedTile\n      .setValue(this.linkedTile.value + this.linkedTileForMerge.value);\n\n    this.linkedTileForMerge.removeFromField();\n    this.unlinkTileForMerge();\n  }\n\n  getValue() {\n    return this.linkedTile.getValue();\n  }\n}\n\nclass Grid {\n  constructor(gridElement) {\n    this.cells = [];\n\n    for (let i = 0; i < GRID_SIZE * GRID_SIZE; i++) {\n      this.cells.push(\n        new Cell(gridElement, i % GRID_SIZE, Math.floor(i / GRID_SIZE))\n      );\n    }\n\n    this.cellsGrouppedByColumns = this.groupCellsByColumn();\n\n    this.cellsGrouppedByReversedColumns = this.groupCellsByColumn()\n      .map(column => [...column].reverse());\n\n    this.cellsGrouppedByRows = this.groupCellsByRow();\n\n    this.cellsGrouppedByReversedRows = this.groupCellsByRow()\n      .map(row => [...row].reverse());\n  }\n\n  getRandomEmptyCell() {\n    const emptyCells = this.cells.filter(cell => cell.isEmpty());\n    const randomIndex = Math.floor(Math.random() * emptyCells.length);\n\n    return emptyCells[randomIndex];\n  }\n\n  groupCellsByColumn() {\n    return this.cells.reduce((groupedCells, cell) => {\n      groupedCells[cell.x] = groupedCells[cell.x] || [];\n      groupedCells[cell.x][cell.y] = cell;\n\n      return groupedCells;\n    }, []);\n  }\n\n  groupCellsByRow() {\n    return this.cells.reduce((groupedCells, cell) => {\n      groupedCells[cell.y] = groupedCells[cell.y] || [];\n      groupedCells[cell.y][cell.x] = cell;\n\n      return groupedCells;\n    }, []);\n  }\n}\n\nconst gameBoard = document.getElementById('game-field');\nconst grid = new Grid(gameBoard);\n\nconst startButton = document.getElementById('button-start');\n\nstartButton.addEventListener('click', startGame);\n\nlet score = 0;\nconst scoreElement = document.getElementById('score');\n\nfunction startGame() {\n  setupNewGame();\n\n  document.getElementById('message-start').classList.add('hidden');\n\n  startButton.classList.remove('start');\n  startButton.innerHTML = 'Restart';\n  startButton.classList.add('restart');\n\n  startButton.removeEventListener('click', startGame);\n  startButton.addEventListener('click', setupNewGame);\n}\n\nfunction setupNewGame() {\n  grid.cells.forEach(cell => {\n    if (!cell.isEmpty()) {\n      cell.linkedTile.removeFromField();\n      cell.unlinkTile();\n    }\n  });\n\n  grid.getRandomEmptyCell().linkTile(new Tile(gameBoard));\n  grid.getRandomEmptyCell().linkTile(new Tile(gameBoard));\n  setupInputOnce();\n\n  score = 0;\n  scoreElement.innerHTML = score;\n\n  document.getElementById('message-lose').classList.add('hidden');\n  document.getElementById('message-win').classList.add('hidden');\n}\n\nfunction setupInputOnce() {\n  window.addEventListener('keydown', handleInput, { once: true });\n}\n\nfunction handleInput(e) {\n  switch (e.key) {\n    case 'ArrowUp':\n      if (!canMoveUp()) {\n        setupInputOnce();\n\n        return;\n      }\n      moveUp();\n      break;\n\n    case 'ArrowDown':\n      if (!canMoveDown()) {\n        setupInputOnce();\n\n        return;\n      }\n      moveDown();\n      break;\n\n    case 'ArrowLeft':\n      if (!canMoveLeft()) {\n        setupInputOnce();\n\n        return;\n      }\n      moveLeft();\n      break;\n\n    case 'ArrowRight':\n      if (!canMoveRight()) {\n        setupInputOnce();\n\n        return;\n      }\n      moveRight();\n      break;\n\n    default:\n      setupInputOnce();\n\n      return;\n  }\n\n  const newTile = new Tile(gameBoard);\n\n  grid.getRandomEmptyCell().linkTile(newTile);\n\n  if (!canMoveUp() && !canMoveDown() && !canMoveLeft() && !canMoveRight()) {\n    document.getElementById('message-lose').classList.remove('hidden');\n\n    return;\n  }\n\n  setupInputOnce();\n}\n\nfunction moveUp() {\n  slideTiles(grid.cellsGrouppedByColumns);\n}\n\nfunction moveDown() {\n  slideTiles(grid.cellsGrouppedByReversedColumns);\n}\n\nfunction moveLeft() {\n  slideTiles(grid.cellsGrouppedByRows);\n}\n\nfunction moveRight() {\n  slideTiles(grid.cellsGrouppedByReversedRows);\n}\n\nfunction slideTiles(groupedCells) {\n  groupedCells.forEach(group => slideTilesInGroup(group));\n\n  grid.cells.forEach(cell => {\n    if (cell.hasTileForMerge()) {\n      cell.mergeTiles();\n      score += cell.getValue();\n      scoreElement.innerHTML = score;\n\n      if (cell.getValue() === 2048) {\n        document.getElementById('message-win').classList.remove('hidden');\n        window.removeEventListener('keydown');\n      }\n    }\n  });\n}\n\nfunction slideTilesInGroup(group) {\n  for (let i = 1; i < group.length; i++) {\n    if (group[i].isEmpty()) {\n      continue;\n    }\n\n    const cellWithTile = group[i];\n\n    let targetCell;\n    let j = i - 1;\n\n    while (j >= 0 && group[j].canAccept(cellWithTile.linkedTile)) {\n      targetCell = group[j];\n      j--;\n    }\n\n    if (!targetCell) {\n      continue;\n    }\n\n    if (targetCell.isEmpty()) {\n      targetCell.linkTile(cellWithTile.linkedTile);\n    } else {\n      targetCell.linkTileForMerge(cellWithTile.linkedTile);\n    }\n\n    cellWithTile.unlinkTile();\n  }\n}\n\nfunction canMoveUp() {\n  return canMove(grid.cellsGrouppedByColumns);\n}\n\nfunction canMoveDown() {\n  return canMove(grid.cellsGrouppedByReversedColumns);\n}\n\nfunction canMoveLeft() {\n  return canMove(grid.cellsGrouppedByRows);\n}\n\nfunction canMoveRight() {\n  return canMove(grid.cellsGrouppedByReversedRows);\n}\n\nfunction canMove(groupCells) {\n  return groupCells.some(group => canMoveInGroup(group));\n}\n\nfunction canMoveInGroup(group) {\n  return group.some((cell, index) => {\n    if (index === 0) {\n      return false;\n    }\n\n    if (cell.isEmpty()) {\n      return false;\n    }\n\n    const targetCell = group[index - 1];\n\n    return targetCell.canAccept(cell.linkedTile);\n  });\n}\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$8713978b2328d32b$export$71511d61b312f219","instance","Constructor","TypeError","$4fc75ccb937ab1df$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","$4fc75ccb937ab1df$export$71511d61b312f219","protoProps","staticProps","prototype","$c3b10a83b523f372$export$71511d61b312f219","arr","len","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","toString","call","slice","constructor","name","test","$197cd56b15c33885$var$Tile","Tile","gridElement","tileElement","document","createElement","classList","add","setValue","Math","random","append","value","x","y","style","setProperty","textContent","concat","remove","$197cd56b15c33885$var$Cell","Cell","cell","tile","setXY","linkedTile","linkedTileForMerge","newTile","isEmpty","hasTileForMerge","removeFromField","unlinkTileForMerge","getValue","$197cd56b15c33885$var$Grid","Grid","cells","$197cd56b15c33885$var$GRID_SIZE","push","floor","cellsGrouppedByColumns","groupCellsByColumn","cellsGrouppedByReversedColumns","map","column","reverse","cellsGrouppedByRows","groupCellsByRow","cellsGrouppedByReversedRows","row","emptyCells","filter","randomIndex","reduce","groupedCells","$197cd56b15c33885$var$gameBoard","getElementById","$197cd56b15c33885$var$grid","$197cd56b15c33885$var$startButton","addEventListener","$197cd56b15c33885$var$startGame","$197cd56b15c33885$var$setupNewGame","innerHTML","removeEventListener","$197cd56b15c33885$var$score","$197cd56b15c33885$var$scoreElement","forEach","unlinkTile","getRandomEmptyCell","linkTile","$197cd56b15c33885$var$setupInputOnce","window","$197cd56b15c33885$var$handleInput","once","e","$197cd56b15c33885$var$canMoveUp","$197cd56b15c33885$var$slideTiles","$197cd56b15c33885$var$canMoveDown","$197cd56b15c33885$var$canMoveLeft","$197cd56b15c33885$var$canMoveRight","group","$197cd56b15c33885$var$slideTilesInGroup","cellWithTile","targetCell","j","canAccept","linkTileForMerge","mergeTiles","$197cd56b15c33885$var$canMove","groupCells","some","index"],"version":3,"file":"index.fdf5c2c1.js.map"}