{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["var $09e991522ca7e64e$exports = {};\n\"use strict\";\nconst $09e991522ca7e64e$var$GRID_SIZE = 4;\nclass $09e991522ca7e64e$var$Tile {\n    constructor(gridElement){\n        this.tileElement = document.createElement(\"div\");\n        this.tileElement.classList.add(\"tile\");\n        this.setValue(Math.random() > 0.1 ? 2 : 4);\n        gridElement.append(this.tileElement);\n    }\n    setXY(x, y) {\n        this.x = x;\n        this.y = y;\n        this.tileElement.style.setProperty(\"--x\", x);\n        this.tileElement.style.setProperty(\"--y\", y);\n    }\n    setValue(value) {\n        this.value = value;\n        this.tileElement.textContent = value;\n        this.tileElement.classList.add(`tile--${value}`);\n    }\n    getValue() {\n        return this.value;\n    }\n    removeFromField() {\n        this.tileElement.remove();\n    }\n}\nclass $09e991522ca7e64e$var$Cell {\n    constructor(gridElement, x, y){\n        const cell = document.createElement(\"div\");\n        cell.classList.add(\"field-cell\");\n        gridElement.append(cell);\n        this.x = x;\n        this.y = y;\n    }\n    linkTile(tile) {\n        tile.setXY(this.x, this.y);\n        this.linkedTile = tile;\n    }\n    unlinkTile() {\n        this.linkedTile = null;\n    }\n    isEmpty() {\n        return !this.linkedTile;\n    }\n    linkTileForMerge(tile) {\n        tile.setXY(this.x, this.y);\n        this.linkedTileForMerge = tile;\n    }\n    unlinkTileForMerge() {\n        this.linkedTileForMerge = null;\n    }\n    hasTileForMerge() {\n        return !!this.linkedTileForMerge;\n    }\n    canAccept(newTile) {\n        return this.isEmpty() || !this.hasTileForMerge() && this.linkedTile.value === newTile.value;\n    }\n    mergeTiles() {\n        this.linkedTile.setValue(this.linkedTile.value + this.linkedTileForMerge.value);\n        this.linkedTileForMerge.removeFromField();\n        this.unlinkTileForMerge();\n    }\n    getValue() {\n        return this.linkedTile.getValue();\n    }\n}\nclass $09e991522ca7e64e$var$Grid {\n    constructor(gridElement){\n        this.cells = [];\n        for(let i = 0; i < $09e991522ca7e64e$var$GRID_SIZE * $09e991522ca7e64e$var$GRID_SIZE; i++)this.cells.push(new $09e991522ca7e64e$var$Cell(gridElement, i % $09e991522ca7e64e$var$GRID_SIZE, Math.floor(i / $09e991522ca7e64e$var$GRID_SIZE)));\n        this.cellsGrouppedByColumns = this.groupCellsByColumn();\n        this.cellsGrouppedByReversedColumns = this.groupCellsByColumn().map((column)=>[\n                ...column\n            ].reverse());\n        this.cellsGrouppedByRows = this.groupCellsByRow();\n        this.cellsGrouppedByReversedRows = this.groupCellsByRow().map((row)=>[\n                ...row\n            ].reverse());\n    }\n    getRandomEmptyCell() {\n        const emptyCells = this.cells.filter((cell)=>cell.isEmpty());\n        const randomIndex = Math.floor(Math.random() * emptyCells.length);\n        return emptyCells[randomIndex];\n    }\n    groupCellsByColumn() {\n        return this.cells.reduce((groupedCells, cell)=>{\n            groupedCells[cell.x] = groupedCells[cell.x] || [];\n            groupedCells[cell.x][cell.y] = cell;\n            return groupedCells;\n        }, []);\n    }\n    groupCellsByRow() {\n        return this.cells.reduce((groupedCells, cell)=>{\n            groupedCells[cell.y] = groupedCells[cell.y] || [];\n            groupedCells[cell.y][cell.x] = cell;\n            return groupedCells;\n        }, []);\n    }\n}\nconst $09e991522ca7e64e$var$gameBoard = document.getElementById(\"game-field\");\nconst $09e991522ca7e64e$var$grid = new $09e991522ca7e64e$var$Grid($09e991522ca7e64e$var$gameBoard);\nconst $09e991522ca7e64e$var$startButton = document.getElementById(\"button-start\");\n$09e991522ca7e64e$var$startButton.addEventListener(\"click\", $09e991522ca7e64e$var$startGame);\nlet $09e991522ca7e64e$var$score = 0;\nconst $09e991522ca7e64e$var$scoreElement = document.getElementById(\"score\");\nfunction $09e991522ca7e64e$var$startGame() {\n    $09e991522ca7e64e$var$setupNewGame();\n    document.getElementById(\"message-start\").classList.add(\"hidden\");\n    $09e991522ca7e64e$var$startButton.classList.remove(\"start\");\n    $09e991522ca7e64e$var$startButton.innerHTML = \"Restart\";\n    $09e991522ca7e64e$var$startButton.classList.add(\"restart\");\n    $09e991522ca7e64e$var$startButton.removeEventListener(\"click\", $09e991522ca7e64e$var$startGame);\n    $09e991522ca7e64e$var$startButton.addEventListener(\"click\", $09e991522ca7e64e$var$setupNewGame);\n}\nfunction $09e991522ca7e64e$var$setupNewGame() {\n    $09e991522ca7e64e$var$grid.cells.forEach((cell)=>{\n        if (!cell.isEmpty()) {\n            cell.linkedTile.removeFromField();\n            cell.unlinkTile();\n        }\n    });\n    $09e991522ca7e64e$var$grid.getRandomEmptyCell().linkTile(new $09e991522ca7e64e$var$Tile($09e991522ca7e64e$var$gameBoard));\n    $09e991522ca7e64e$var$grid.getRandomEmptyCell().linkTile(new $09e991522ca7e64e$var$Tile($09e991522ca7e64e$var$gameBoard));\n    $09e991522ca7e64e$var$setupInputOnce();\n    $09e991522ca7e64e$var$score = 0;\n    $09e991522ca7e64e$var$scoreElement.innerHTML = $09e991522ca7e64e$var$score;\n    document.getElementById(\"message-lose\").classList.add(\"hidden\");\n    document.getElementById(\"message-win\").classList.add(\"hidden\");\n}\nfunction $09e991522ca7e64e$var$setupInputOnce() {\n    window.addEventListener(\"keydown\", $09e991522ca7e64e$var$handleInput, {\n        once: true\n    });\n}\nfunction $09e991522ca7e64e$var$handleInput(e) {\n    switch(e.key){\n        case \"ArrowUp\":\n            if (!$09e991522ca7e64e$var$canMoveUp()) {\n                $09e991522ca7e64e$var$setupInputOnce();\n                return;\n            }\n            $09e991522ca7e64e$var$moveUp();\n            break;\n        case \"ArrowDown\":\n            if (!$09e991522ca7e64e$var$canMoveDown()) {\n                $09e991522ca7e64e$var$setupInputOnce();\n                return;\n            }\n            $09e991522ca7e64e$var$moveDown();\n            break;\n        case \"ArrowLeft\":\n            if (!$09e991522ca7e64e$var$canMoveLeft()) {\n                $09e991522ca7e64e$var$setupInputOnce();\n                return;\n            }\n            $09e991522ca7e64e$var$moveLeft();\n            break;\n        case \"ArrowRight\":\n            if (!$09e991522ca7e64e$var$canMoveRight()) {\n                $09e991522ca7e64e$var$setupInputOnce();\n                return;\n            }\n            $09e991522ca7e64e$var$moveRight();\n            break;\n        default:\n            $09e991522ca7e64e$var$setupInputOnce();\n            return;\n    }\n    const newTile = new $09e991522ca7e64e$var$Tile($09e991522ca7e64e$var$gameBoard);\n    $09e991522ca7e64e$var$grid.getRandomEmptyCell().linkTile(newTile);\n    if (!$09e991522ca7e64e$var$canMoveUp() && !$09e991522ca7e64e$var$canMoveDown() && !$09e991522ca7e64e$var$canMoveLeft() && !$09e991522ca7e64e$var$canMoveRight()) {\n        document.getElementById(\"message-lose\").classList.remove(\"hidden\");\n        return;\n    }\n    $09e991522ca7e64e$var$setupInputOnce();\n}\nfunction $09e991522ca7e64e$var$moveUp() {\n    $09e991522ca7e64e$var$slideTiles($09e991522ca7e64e$var$grid.cellsGrouppedByColumns);\n}\nfunction $09e991522ca7e64e$var$moveDown() {\n    $09e991522ca7e64e$var$slideTiles($09e991522ca7e64e$var$grid.cellsGrouppedByReversedColumns);\n}\nfunction $09e991522ca7e64e$var$moveLeft() {\n    $09e991522ca7e64e$var$slideTiles($09e991522ca7e64e$var$grid.cellsGrouppedByRows);\n}\nfunction $09e991522ca7e64e$var$moveRight() {\n    $09e991522ca7e64e$var$slideTiles($09e991522ca7e64e$var$grid.cellsGrouppedByReversedRows);\n}\nfunction $09e991522ca7e64e$var$slideTiles(groupedCells) {\n    groupedCells.forEach((group)=>$09e991522ca7e64e$var$slideTilesInGroup(group));\n    $09e991522ca7e64e$var$grid.cells.forEach((cell)=>{\n        if (cell.hasTileForMerge()) {\n            cell.mergeTiles();\n            $09e991522ca7e64e$var$score += cell.getValue();\n            $09e991522ca7e64e$var$scoreElement.innerHTML = $09e991522ca7e64e$var$score;\n            if (cell.getValue() === 2048) {\n                document.getElementById(\"message-win\").classList.remove(\"hidden\");\n                window.removeEventListener(\"keydown\");\n            }\n        }\n    });\n}\nfunction $09e991522ca7e64e$var$slideTilesInGroup(group) {\n    for(let i = 1; i < group.length; i++){\n        if (group[i].isEmpty()) continue;\n        const cellWithTile = group[i];\n        let targetCell;\n        let j = i - 1;\n        while(j >= 0 && group[j].canAccept(cellWithTile.linkedTile)){\n            targetCell = group[j];\n            j--;\n        }\n        if (!targetCell) continue;\n        if (targetCell.isEmpty()) targetCell.linkTile(cellWithTile.linkedTile);\n        else targetCell.linkTileForMerge(cellWithTile.linkedTile);\n        cellWithTile.unlinkTile();\n    }\n}\nfunction $09e991522ca7e64e$var$canMoveUp() {\n    return $09e991522ca7e64e$var$canMove($09e991522ca7e64e$var$grid.cellsGrouppedByColumns);\n}\nfunction $09e991522ca7e64e$var$canMoveDown() {\n    return $09e991522ca7e64e$var$canMove($09e991522ca7e64e$var$grid.cellsGrouppedByReversedColumns);\n}\nfunction $09e991522ca7e64e$var$canMoveLeft() {\n    return $09e991522ca7e64e$var$canMove($09e991522ca7e64e$var$grid.cellsGrouppedByRows);\n}\nfunction $09e991522ca7e64e$var$canMoveRight() {\n    return $09e991522ca7e64e$var$canMove($09e991522ca7e64e$var$grid.cellsGrouppedByReversedRows);\n}\nfunction $09e991522ca7e64e$var$canMove(groupCells) {\n    return groupCells.some((group)=>$09e991522ca7e64e$var$canMoveInGroup(group));\n}\nfunction $09e991522ca7e64e$var$canMoveInGroup(group) {\n    return group.some((cell, index)=>{\n        if (index === 0) return false;\n        if (cell.isEmpty()) return false;\n        const targetCell = group[index - 1];\n        return targetCell.canAccept(cell.linkedTile);\n    });\n}\n\n\n//# sourceMappingURL=index.f9ed1e1f.js.map\n","'use strict';\n\nconst GRID_SIZE = 4;\n\nclass Tile {\n  constructor(gridElement) {\n    this.tileElement = document.createElement('div');\n    this.tileElement.classList.add('tile');\n    this.setValue(Math.random() > 0.1 ? 2 : 4);\n    gridElement.append(this.tileElement);\n  }\n\n  setXY(x, y) {\n    this.x = x;\n    this.y = y;\n    this.tileElement.style.setProperty('--x', x);\n    this.tileElement.style.setProperty('--y', y);\n  }\n\n  setValue(value) {\n    this.value = value;\n    this.tileElement.textContent = value;\n\n    this.tileElement.classList.add(`tile--${value}`);\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  removeFromField() {\n    this.tileElement.remove();\n  }\n}\n\nclass Cell {\n  constructor(gridElement, x, y) {\n    const cell = document.createElement('div');\n\n    cell.classList.add('field-cell');\n    gridElement.append(cell);\n    this.x = x;\n    this.y = y;\n  }\n\n  linkTile(tile) {\n    tile.setXY(this.x, this.y);\n    this.linkedTile = tile;\n  }\n\n  unlinkTile() {\n    this.linkedTile = null;\n  }\n\n  isEmpty() {\n    return !this.linkedTile;\n  }\n\n  linkTileForMerge(tile) {\n    tile.setXY(this.x, this.y);\n    this.linkedTileForMerge = tile;\n  }\n\n  unlinkTileForMerge() {\n    this.linkedTileForMerge = null;\n  }\n\n  hasTileForMerge() {\n    return !!this.linkedTileForMerge;\n  }\n\n  canAccept(newTile) {\n    return (\n      this.isEmpty()\n      || (!this.hasTileForMerge() && this.linkedTile.value === newTile.value)\n    );\n  }\n\n  mergeTiles() {\n    this.linkedTile\n      .setValue(this.linkedTile.value + this.linkedTileForMerge.value);\n\n    this.linkedTileForMerge.removeFromField();\n    this.unlinkTileForMerge();\n  }\n\n  getValue() {\n    return this.linkedTile.getValue();\n  }\n}\n\nclass Grid {\n  constructor(gridElement) {\n    this.cells = [];\n\n    for (let i = 0; i < GRID_SIZE * GRID_SIZE; i++) {\n      this.cells.push(\n        new Cell(gridElement, i % GRID_SIZE, Math.floor(i / GRID_SIZE))\n      );\n    }\n\n    this.cellsGrouppedByColumns = this.groupCellsByColumn();\n\n    this.cellsGrouppedByReversedColumns = this.groupCellsByColumn()\n      .map(column => [...column].reverse());\n\n    this.cellsGrouppedByRows = this.groupCellsByRow();\n\n    this.cellsGrouppedByReversedRows = this.groupCellsByRow()\n      .map(row => [...row].reverse());\n  }\n\n  getRandomEmptyCell() {\n    const emptyCells = this.cells.filter(cell => cell.isEmpty());\n    const randomIndex = Math.floor(Math.random() * emptyCells.length);\n\n    return emptyCells[randomIndex];\n  }\n\n  groupCellsByColumn() {\n    return this.cells.reduce((groupedCells, cell) => {\n      groupedCells[cell.x] = groupedCells[cell.x] || [];\n      groupedCells[cell.x][cell.y] = cell;\n\n      return groupedCells;\n    }, []);\n  }\n\n  groupCellsByRow() {\n    return this.cells.reduce((groupedCells, cell) => {\n      groupedCells[cell.y] = groupedCells[cell.y] || [];\n      groupedCells[cell.y][cell.x] = cell;\n\n      return groupedCells;\n    }, []);\n  }\n}\n\nconst gameBoard = document.getElementById('game-field');\nconst grid = new Grid(gameBoard);\n\nconst startButton = document.getElementById('button-start');\n\nstartButton.addEventListener('click', startGame);\n\nlet score = 0;\nconst scoreElement = document.getElementById('score');\n\nfunction startGame() {\n  setupNewGame();\n\n  document.getElementById('message-start').classList.add('hidden');\n\n  startButton.classList.remove('start');\n  startButton.innerHTML = 'Restart';\n  startButton.classList.add('restart');\n\n  startButton.removeEventListener('click', startGame);\n  startButton.addEventListener('click', setupNewGame);\n}\n\nfunction setupNewGame() {\n  grid.cells.forEach(cell => {\n    if (!cell.isEmpty()) {\n      cell.linkedTile.removeFromField();\n      cell.unlinkTile();\n    }\n  });\n\n  grid.getRandomEmptyCell().linkTile(new Tile(gameBoard));\n  grid.getRandomEmptyCell().linkTile(new Tile(gameBoard));\n  setupInputOnce();\n\n  score = 0;\n  scoreElement.innerHTML = score;\n\n  document.getElementById('message-lose').classList.add('hidden');\n  document.getElementById('message-win').classList.add('hidden');\n}\n\nfunction setupInputOnce() {\n  window.addEventListener('keydown', handleInput, { once: true });\n}\n\nfunction handleInput(e) {\n  switch (e.key) {\n    case 'ArrowUp':\n      if (!canMoveUp()) {\n        setupInputOnce();\n\n        return;\n      }\n      moveUp();\n      break;\n\n    case 'ArrowDown':\n      if (!canMoveDown()) {\n        setupInputOnce();\n\n        return;\n      }\n      moveDown();\n      break;\n\n    case 'ArrowLeft':\n      if (!canMoveLeft()) {\n        setupInputOnce();\n\n        return;\n      }\n      moveLeft();\n      break;\n\n    case 'ArrowRight':\n      if (!canMoveRight()) {\n        setupInputOnce();\n\n        return;\n      }\n      moveRight();\n      break;\n\n    default:\n      setupInputOnce();\n\n      return;\n  }\n\n  const newTile = new Tile(gameBoard);\n\n  grid.getRandomEmptyCell().linkTile(newTile);\n\n  if (!canMoveUp() && !canMoveDown() && !canMoveLeft() && !canMoveRight()) {\n    document.getElementById('message-lose').classList.remove('hidden');\n\n    return;\n  }\n\n  setupInputOnce();\n}\n\nfunction moveUp() {\n  slideTiles(grid.cellsGrouppedByColumns);\n}\n\nfunction moveDown() {\n  slideTiles(grid.cellsGrouppedByReversedColumns);\n}\n\nfunction moveLeft() {\n  slideTiles(grid.cellsGrouppedByRows);\n}\n\nfunction moveRight() {\n  slideTiles(grid.cellsGrouppedByReversedRows);\n}\n\nfunction slideTiles(groupedCells) {\n  groupedCells.forEach(group => slideTilesInGroup(group));\n\n  grid.cells.forEach(cell => {\n    if (cell.hasTileForMerge()) {\n      cell.mergeTiles();\n      score += cell.getValue();\n      scoreElement.innerHTML = score;\n\n      if (cell.getValue() === 2048) {\n        document.getElementById('message-win').classList.remove('hidden');\n        window.removeEventListener('keydown');\n      }\n    }\n  });\n}\n\nfunction slideTilesInGroup(group) {\n  for (let i = 1; i < group.length; i++) {\n    if (group[i].isEmpty()) {\n      continue;\n    }\n\n    const cellWithTile = group[i];\n\n    let targetCell;\n    let j = i - 1;\n\n    while (j >= 0 && group[j].canAccept(cellWithTile.linkedTile)) {\n      targetCell = group[j];\n      j--;\n    }\n\n    if (!targetCell) {\n      continue;\n    }\n\n    if (targetCell.isEmpty()) {\n      targetCell.linkTile(cellWithTile.linkedTile);\n    } else {\n      targetCell.linkTileForMerge(cellWithTile.linkedTile);\n    }\n\n    cellWithTile.unlinkTile();\n  }\n}\n\nfunction canMoveUp() {\n  return canMove(grid.cellsGrouppedByColumns);\n}\n\nfunction canMoveDown() {\n  return canMove(grid.cellsGrouppedByReversedColumns);\n}\n\nfunction canMoveLeft() {\n  return canMove(grid.cellsGrouppedByRows);\n}\n\nfunction canMoveRight() {\n  return canMove(grid.cellsGrouppedByReversedRows);\n}\n\nfunction canMove(groupCells) {\n  return groupCells.some(group => canMoveInGroup(group));\n}\n\nfunction canMoveInGroup(group) {\n  return group.some((cell, index) => {\n    if (index === 0) {\n      return false;\n    }\n\n    if (cell.isEmpty()) {\n      return false;\n    }\n\n    const targetCell = group[index - 1];\n\n    return targetCell.canAccept(cell.linkedTile);\n  });\n}\n"],"names":["$09e991522ca7e64e$var$Tile","constructor","gridElement","tileElement","document","createElement","classList","add","setValue","Math","random","append","setXY","x","y","style","setProperty","value","textContent","getValue","removeFromField","remove","$09e991522ca7e64e$var$Cell","cell","linkTile","tile","linkedTile","unlinkTile","isEmpty","linkTileForMerge","linkedTileForMerge","unlinkTileForMerge","hasTileForMerge","canAccept","newTile","mergeTiles","$09e991522ca7e64e$var$gameBoard","getElementById","$09e991522ca7e64e$var$grid","cells","i","$09e991522ca7e64e$var$GRID_SIZE","push","floor","cellsGrouppedByColumns","groupCellsByColumn","cellsGrouppedByReversedColumns","map","column","reverse","cellsGrouppedByRows","groupCellsByRow","cellsGrouppedByReversedRows","row","getRandomEmptyCell","emptyCells","filter","randomIndex","length","reduce","groupedCells","$09e991522ca7e64e$var$startButton","addEventListener","$09e991522ca7e64e$var$startGame","$09e991522ca7e64e$var$setupNewGame","innerHTML","removeEventListener","$09e991522ca7e64e$var$score","$09e991522ca7e64e$var$scoreElement","forEach","$09e991522ca7e64e$var$setupInputOnce","window","$09e991522ca7e64e$var$handleInput","once","e","key","$09e991522ca7e64e$var$canMoveUp","$09e991522ca7e64e$var$slideTiles","$09e991522ca7e64e$var$canMoveDown","$09e991522ca7e64e$var$canMoveLeft","$09e991522ca7e64e$var$canMoveRight","group","$09e991522ca7e64e$var$slideTilesInGroup","targetCell","cellWithTile","j","$09e991522ca7e64e$var$canMove","groupCells","some","index"],"version":3,"file":"index.f9ed1e1f.js.map"}